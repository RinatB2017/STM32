/****************************************************************************
   main.h

 ****************************************************************************/
  
/* Define to prevent recursive inclusion -------------------------------------*/
#ifndef __STM32F4_DISCOVERY_USB_HID_H
#define __STM32F4_DISCOVERY_USB_HID_H

/* Includes ------------------------------------------------------------------*/
#include "stm32f4_discovery.h"
#include <stdio.h>

#endif /* __STM32F4_DISCOVERY_USB_HID_H */

 uint8_t    i=0;
 uint8_t    nt=11;                //номер пакета в режиме 1пер
 uint16_t   Nullcycle=0;		  //Счетчик пустых циклов
 uint16_t   NullcyclePar=0;		  //Счетчик пустых циклов
 uint16_t   CFBuf=0; 			  //Counter of Filling  buffer   счетчик Заполнения буфера данными (1...4)каждые 4мс заносится 5 слов 5*4=20
 uint16_t   CounterInt=0;		  //Счетчик прерываний (такты 1мс)
 uint16_t   CouPDT=0;		      //Счетчик -указатель DT
 uint16_t   CounterPac=0;		   //Счетчик пакетов гр (до 4)
 uint16_t   CouPacPar=0;		   //Счетчик пакетов параметров
 uint8_t    ButtonPressed = 0x00;
 uint8_t    InBuffer[64], OutBuffer[64];   //буфер вх и вых данных-направление относительно пк

 uint8_t    ModePar=0;		     //Флаг Режим передачи данных Par
 uint8_t    ModeGr=0;		     //Флаг Режим передачи данных Gr
 uint8_t    ModeDP=0;			 //Режим данных  1, 6, 0 ( 1пер-64 байта ,6 переменных по 5 значений   (12 бит))
 uint8_t    ModeW=1;			 // Режим работы 1-рабочий; 2-наладочный
 uint16_t   Sampling=200;        //частота дискретизации сигналов для отправки в пк 200мкс\400мкс\1мс

 //############# Переменные параметры доступные для изменения (значения указаны для имитации)
 // Коэф-ты:
 float cf1=0.75; float cf2=1.35; float cf3=2.51;

// Задание (setting):
 int  s1=120;  int  s2=240;  int  s3=300;

//############# Оцифрованные значения 6-и аналоговых входов t дискретизации = 1мс (20 точек )
// Эти значения являются имитацией работы АЦП-только для упрощения примера
//Ua[0]...Ua[19]
 uint16_t Ua [20]={2048, 2681, 3252, 3705, 3996, 4098, 3996, 3705, 3252, 2681, 2048, 1415, 844,   391,  100,   0,    100,  391,  844,  1415};
 //				   0800	 0A79  0CB4  0E79  0F9C  1002  0F9C  0E79  0CB4  0A79  0800  0587  034C   0187  0064   0     0064  0187  034C  0587
 uint16_t Ub [20]={274,  45,   10,   176,  526,  1024, 1622, 2263, 2882, 3418, 3821, 4050, 4086,  3920, 3570,  3072, 2474, 1833, 1214, 678};
//				  0112  002D  000A   00B0  020E  0400  0656  08D7  0B42  0D5A  0EED  0FD2  0FF6   0F50  0DF2   0C00  09AA  0729  04BE  02A6
 uint16_t Uc [20]={3822, 3418, 2882, 2263, 1622, 1024, 526,  176,  10,   45,   274,  678,  1214,  1833, 2474,  3073, 3570, 3920, 4086, 4050};
//                 0EEE  0D5A  0B42  08D7  0656  0400  020E  00B0 000A  002D   0112  02A6  04BE   0729  09AA   0C01  0DF2  0F50  0FF6  0FD2
 uint16_t Ia [20]={4098, 3996, 3705, 3252, 2681, 2048, 1415, 844,  391,  100,  0,    100,  391,   844,  1415,  2048, 2681, 3252, 3705, 3996};
 uint16_t Ib [20]={1024, 1622, 2263, 2882, 3418, 3821, 4050, 4086, 3920, 3570, 3072, 2474, 1833,  1214, 678,   274,  45,   10,   176,  526};
 uint16_t Ic [20]={1024, 526,  176,  10,   45,   274,  678,  1214, 1833, 2474, 3073, 3570, 3920,  4086, 4051,  3822, 3418, 2882, 2263, 1622};

 //7-я гр переменная DT-Счетчик с инкрементом 10 каждую 1мс-для 'оживления' картинки графиков
 //uint16_t DT [20]={0,10,20,30,40,50,60,70,80,90,  100,110,120,130,140,150,160,170,180,190};
 uint16_t DT [20]={0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0};

//#############################################################################################
// 6 массивов дпередатчика на 10 байт или 5 слов
 uint16_t bTX1 [5];
 uint16_t bTX2 [5];
 uint16_t bTX3 [5];
 uint16_t bTX4 [5];
 uint16_t bTX5 [5];
 uint16_t bTX6 [5];

 uint16_t *pv[]={Ua,Ub,Uc,Ia,Ib,Ic,DT};  //массив указателей на массивы гр переменных

 //указатели на гр-е переменные и их копии для восстановления после передачи всего массива
 uint16_t *p1,*pp1;
 uint16_t *p2,*pp2;
 uint16_t *p3,*pp3;
 uint16_t *p4,*pp4;
 uint16_t *p5,*pp5;
 uint16_t *p6,*pp6;


 void  DelayQ(uint32_t nTime);
 void  GetBufPar(void);
 void  Button_state(void);
 void  RunChDataRxID2( void);
 void  RunCommandsRxID1(void);
 void  GetBuf6Var(void);
 void  GetBufDT(void);
 void  Tx6var(void);
 void  Tx1var(void);

 /*
 Ua=1
 Ub=2
 Uc=3
 Ia=4
 Ib=5
 Ic=6
 Dt=7
*/

 /******************************************************************************************
  Пакет для передачи данных-индикация в ПК IP=4
--------------------------------------------------------------------------------------------
  Пункты меню ПК (секции)  |длина  | Значения			         |Число переменных Lv
                           |(байт) |				             |
--------------------------------------------------------------------------------------------
 Режим (M -Mode )          | Ln=2  | 1-рабочий, 2-Наладочный	 | 2 режима(2-ой байт-резерв)
 Авария(A-Alarm)           | Ln=4  | 1-есть, 2- нет. 3- Норма	 | 8 Аварий(4бита на 1)
 Коэф-ты(k-Coefficient     | Ln=24 | 1 пер-я отобр. 4 байта,     | 6 переменных(4байта)
 Просмотр (V-View)         | Ln=20 | 1 пер-я отобр-e 2 байта, б/з| 10 переменных (2байта)
 Задание(Z-Setting)	       | Ln=8  | 1 пер-я отобр-e 2 байта, б/з| 4 переменных (8байт)
 Сигнализация(S-Signalling)| Ln=5  | 1-вкл, 2-0ткл, 3-норма,	 | 10 объектов контроля(4бита)
                           |       |  4-Ниже нормы 5 Выше нормы	 |
---------------------------------------------------------------------------------------------
 L=1id+2m+4a+24c+20v+8z+5c=64*/
/*           	      |0  | 1 | 2 | 3  | 4  | 5  | 6  | 7   | 8  | 9  | 10 | 11 | 12 | 13 | 14 |
 	 	       	   	  |ID | M1| M2|A1.2|A3.4|A5.6|A7.8| K1.1|K1.2|K1.3|K1.4|K2.1|K2.2|K2.3|K2.4|*/
 uint8_t Par [64]=  {  4,  1,  0,  0,   0,    0,  0,   0,    0,   0,    0,   0,   0,   0,   0,

	     /*| 15 | 16 | 17 | 18 | 19 | 20 | 21 | 22 | 23 | 24 | 25 | 26 | 27 | 28 | 29 | 30 |
	       |K3.1|K3.2|K3.3|K3.4|K4.1|K4.2|K4.3|K4.4|K5.1|K5.2|K5.3|K5.4|K6.1|K6.2|K6.3|K6.4| */
  	  	  0,  0,   0,   0,   0,    0,   0,    0,   0,  0,   0,   0,   0,   0,   0,   0,

/*  | 31 | 32 | 33 | 34 | 35 | 36 | 37 | 38 | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 | 48 |
    |V1.1|V1.2|V2.1|V2.2|V3.1|V3.2|V4.1|V4.2|V5.1|V5.2|V6.1|V6.2|V7.1|V7.2|V8.1|V8.2|V9.1|V9.2| */
	0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
/*
    | 49  | 50  | 51  | 52  | 53  | 54  | 55  | 56  | 57  | 58  | 59  | 60  | 61  | 62 | 63  |
    |P10.1|P10.2|Z1.1 |Z1.2 |Z2.1 |Z2.2 |Z3.1 |Z3.2 |Z4.1 | Z4.2|S1,2 |S3,4 |S5,6 |S7,8|S9,10| */
      0,    0,     0,   0,     0,    0,    0,   0,     0,    0,    0,    0,    0,    0,    0  };



//                               V1-ст V2-мл
/*
 Следующие пункты должны быть  в ini файле для организации индикации параметров и графикоа
 в  программе VisualDEx (ini-файл расположен в корневом каталоге программы).
Компоненты индикации параметров и их имена создаются программой VisualSTM динамически на основании содержания
секций ini-файла.По своему усмотрению пользователь может изменить:
     - кол-во переменных в секции 0..Lv (не должно превышать Ln max таблицы выше);
     - имена переменных (Символы имени не должны накладываться на компонент с данными);
Названия секций в скобках [] не подлежат изменению. Тип и кодирование данных должны соответствовать примеру.
Массив Par[64] должен быть заполнен в соответствии с шаблоном (приведен выше) и учетом выбранных переменных в ini-файле.
Неиспользуемые байты секции (резерв) могут содержать любую информацию или могут быть использованы в др секциях.
Информация объектов секций Сигнализация и Авария кодируются 4-я битами. Например,  Par [64] =0x14 - соответствует
объект 15 вкл., параметр объекта 16 выше нормы.
 */

 /*

[VarSTM]
-Ua=
-Ub=
-Uc=
-Ia=
-Ib=
-Ic=
-Dt=


 [Mode]
 1=

[Alarm]
 1=Авария
 2=Ав Q1
 3=Ав Id
 4=Ав Qсн
 5=Ав Rиз

[Coefficient]
 1=K1
 2=K2
 3=K3

[View]
 1=Ud(B)
 2=Id(A)
 3=Uo(B)
 4=Io(A)
 5=Rиз(kOm)
 6=Сч-кПар

[Setting]
1=Iст1
2=Icт2
3=Iст3

[Signalling]
 1=Q1
 2=Q2
 3=К1
 4=К2
 5=Rиз
 6=Синх-я

[Position]
pAl=3
pCo=7
pPa=31
pZa=51
pSi=59

*/

 /*

//############# Структура буфера отправленных данных с ПК при ID =1 режима

  OutBuffer[0]:=1;      // ID  1= режим приема
  OutBuffer[1]:=0;      // 0-нет обмена; 1-Только графика; 2-Только пар-ры; 3-Смеш-й режим= ModeTx
  OutBuffere[2]:=0;     // Графика: 6= 6пер; 1=1пер
  OutBuffer[3]:=0;      // Дискретизация : 2=200mkc; 4=400mkc; 1= 1mc
  OutBuffer[4]:= NSer1;   // 1 переменные для построения гр-ов
  OutBuffer[5]:= NSer2;   // 2
  OutBuffer[6]:= NSer3;   // 3
  OutBuffer[7]:= NSer4;   // 4
  OutBuffer[8]:= NSer5;   // 5
  OutBuffer[9]:= NSer6;   // 6
  OutBuffer[10]:= $55;    // Конец -резерв

 //#######  Структура буфера отправленных данных с ПК при ID =2 (задание -Z, коэф-ы-C)
//                       изменение параметров
 OutBuffer[0]:=2;     // ID -передача данных
 OutBuffer[1]:=$AA;   // Смена режима АА-нет   (Рабочий-1, Наладочный-2)
 OutBuffer[2]:=$AA;   // NZ-Позиция изменяемого(Z)  АА-нет изм.
 OutBuffer[3]		  // Ст байт
 OutBuffer[4]		  // Мл байт
 OutBuffer[5]:=$AA;   // СZ-Позиция изменяемого(С)  АА-нет изм.
 OutBuffer[6]
 OutBuffer[7]
 OutBuffer[8]
 OutBuffer[9]
 OutBuffer[10] =$55	  // Конец -резерв

   */

 //#######  Структура буфера отправленных гр данных в ПК InBuffer[0]=3;  (5 точек 6-и переменных-A,B,C,D,E,F)

 /*        	 	|0  | 1 | 2  | 3  | 4  | 5  | 6  | 7   | 8  | 9  | 10 | 11 |
 	     	  	|ID |   |A1.1|A1.2|A2.1|A2.2|A3.1| A3.2|A4.1|A4.2|A5.1|A5.2|    X1.1 -ст байт Х1.2- мл. байт
InBuffer[64]= {  3,   0,  D,   D,   D,    D,  D,   D,    D,   D,    D,   D,

 	  | 12 | 13 | 14 | 15 | 16 | 17 | 18 | 19 | 20 | 21 | 22 | 23 | 24 | 25 | 26 | 27 | 28 | 29 | 30 | 31 |
 	  |B1.1|B1.2|B2.1|B2.2|B3.1|B3.2|B4.1|B4.2|B5.1|B5.2|C1.1|C1.2|C2.1|C2.2|C3.1|C3.2|C4.1|C4.2|C5.1|C5.2|
   	     D,   D,   D,   D,  D,   D,   D,   D,    D,   D,   D,   D,  D,    D,  D,   D,   D,   D,   D,    D,

      |  32 | 33 | 34 | 35 | 36 | 37 | 38 | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 | 48 |49  | 50 | 51 |
      |D1.1 |D1.2|D2.1|D2.2|D3.1|D3.2|D4.1|D4.2|D5.1|D5.2|E1.1|E1.2|E2.1|E2.2|E3.1|E3.2|E4.1|E4.2|E5.1|E5.2|
         D,   D,   D,   D,   D,   D,   D,   D,   D,   D,   D,   D,   D,   D,   D,   D,   D,    D,   D,   D,

      | 52  | 53  | 54  | 55  | 56  | 57  | 58  | 59  | 60  | 61  | 62 | 63  |
      |F1.1 |F1.2 |F2.1 |F2.2 |F3.1 |F3.2 | F4.1|F4,2 |F5,1 |F5,2 |    |     |
        D,     D,    D,    D,   D,     D,    D,    D,    D,    D,    0,    0  };*/


/*
       LD3                 LD3-PD13
  LD4		LD5			   LD4-PD12
       LD6                 LD5-PD14
                           LD6-PD15
 */




